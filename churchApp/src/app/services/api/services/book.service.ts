/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { Book } from '../models/book';
import { booksGet } from '../fn/book/books-get';
import { BooksGet$Params } from '../fn/book/books-get';

@Injectable({ providedIn: 'root' })
export class BookService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `booksGet()` */
  static readonly BooksGetPath = '/books';

  /**
   * Get a complete list of books.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `booksGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  booksGet$Response(params?: BooksGet$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'bookList'?: Array<Book>;
}>> {
    return booksGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Get a complete list of books.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `booksGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  booksGet(params?: BooksGet$Params, context?: HttpContext): Observable<{
'bookList'?: Array<Book>;
}> {
    return this.booksGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'bookList'?: Array<Book>;
}>): {
'bookList'?: Array<Book>;
} => r.body)
    );
  }

}
