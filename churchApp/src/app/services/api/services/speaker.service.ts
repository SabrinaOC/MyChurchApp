/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { Speaker } from '../models/speaker';
import { speakersGet } from '../fn/speaker/speakers-get';
import { SpeakersGet$Params } from '../fn/speaker/speakers-get';

@Injectable({ providedIn: 'root' })
export class SpeakerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `speakersGet()` */
  static readonly SpeakersGetPath = '/speakers';

  /**
   * Get a list of all speakers.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `speakersGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  speakersGet$Response(params?: SpeakersGet$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'speakerList'?: Array<Speaker>;
}>> {
    return speakersGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Get a list of all speakers.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `speakersGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  speakersGet(params?: SpeakersGet$Params, context?: HttpContext): Observable<{
'speakerList'?: Array<Speaker>;
}> {
    return this.speakersGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
'speakerList'?: Array<Speaker>;
}>): {
'speakerList'?: Array<Speaker>;
} => r.body)
    );
  }

}
