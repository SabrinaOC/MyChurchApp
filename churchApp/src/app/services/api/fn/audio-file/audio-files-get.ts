/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';


export interface AudioFilesGet$Params {
  url: string;
  title: string;
  mimetype: string;
}

export function audioFilesGet(http: HttpClient, rootUrl: string, params: AudioFilesGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Blob>> {
  const rb = new RequestBuilder(rootUrl, audioFilesGet.PATH, 'get');
  if (params) {
    rb.query('url', params.url, {});
    rb.query('title', params.title, {});
    rb.query('mimetype', params.mimetype, {});
  }

  return http.request(
    rb.build({ responseType: 'blob', accept: 'audio/mpeg', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<Blob>;
    })
  );
}

audioFilesGet.PATH = '/audioFiles';
